/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh;
  };
  materials: {};
};

const MESH_COLOR = "#6645be";
const MESH_COLOR2 = "#2c174e";

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null!);
  const { nodes, materials } = useGLTF("/static/DunesModel.glb") as GLTFResult;

  useFrame((state, camera) => {
    group.current.rotation.y += 0.001;
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry}>
        <meshStandardMaterial roughness={1} color={MESH_COLOR} metalness={2} />
      </mesh>
    </group>
  );
}

useGLTF.preload("/static/DunesModel.glb");
